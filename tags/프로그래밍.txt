1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["_QDeOv29XYyrnP19mEax6",[[["",{"children":["tags",{"children":[["slug","%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D","d"],{"children":["__PAGE__?{\"slug\":\"프로그래밍\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
9:I{"id":1247,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
a:I{"id":41465,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children",["slug","%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8",["$","div",null,{"className":"pt-[80px]","children":[["$","$L9",null,{"language":"app","screenType":"TAGS"}],["$","main",null,{"className":"flex w-full justify-center","children":["$","div",null,{"className":"flex flex-row justify-start xl:w-[800px] w-full px-[20px] py-[40px] md:px-[40px] md:pb-[80px] md:pt-[60px] gap-[80px]","children":["$","section",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","h2",null,{"className":"md:flex hidden text-gray-900 font-semibold text-[22px]","children":"프로그래밍 관련글"}],["$","ul",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","li","Swift에서 변수와 상수 이해하기: var와 let의 차이점0",{"children":["$","$La",null,{"postMeta":{"id":"c7a1c695-9405-4f7b-8fe9-71b67e494867","path":"/swift/Swift에서-변수와-상수-이해하기-var와-let의-차이점-c7a1c695","title":"Swift에서 변수와 상수 이해하기: var와 let의 차이점","description":"이 글에서는 Swift 프로그래밍 언어에서 변수와 상수를 선언하는 방법과 사용 방법에 대해 설명합니다. 구체적으로 `var`와 `let`의 차이점에 대해 다루고 있으며, 실용적인 예제와 함께 이해를 돕습니다.","date":"2024-06-30T06:02:53.433Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"변수","path":"/tags/변수","id":"변수"},{"name":"상수","path":"/tags/상수","id":"상수"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"5.1","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":0,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 옵셔널 완전 정복하기: 옵셔널이 필요한 이유와 안전한 사용법1",{"children":["$","$La",null,{"postMeta":{"id":"0cda5a6d-5e89-4e3f-a31c-3ab0ed805028","path":"/swift/Swift-옵셔널-완전-정복하기-옵셔널이-필요한-이유와-안전한-사용법-0cda5a6d","title":"Swift 옵셔널 완전 정복하기: 옵셔널이 필요한 이유와 안전한 사용법","description":"이 글에서는 Swift 프로그래밍 언어에서 옵셔널(Optional)의 필요성, 사용법, 그리고 안전한 활용 방법에 대해 깊이 있게 다룹니다. Swift를 처음 접하는 사람부터 더 나은 코드를 작성하고 싶은 숙련된 개발자 모두에게 유용한 정보를 제공합니다.","date":"2024-06-30T06:02:11.054Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"옵셔널","path":"/tags/옵셔널","id":"옵셔널"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"},{"name":"안전한 코딩","path":"/tags/안전한-코딩","id":"안전한-코딩"}],"readMin":"5.3","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":1,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 메모리 관리 이해하기: 자동 참조 카운트(ARC)의 작동 원리2",{"children":["$","$La",null,{"postMeta":{"id":"111942c4-061f-4159-9858-c79390a7fc6b","path":"/swift/Swift-메모리-관리-이해하기-자동-참조-카운트ARC의-작동-원리-111942c4","title":"Swift 메모리 관리 이해하기: 자동 참조 카운트(ARC)의 작동 원리","description":"이 글은 Swift 언어에서 메모리 관리를 담당하는 자동 참조 카운트(ARC)에 대해 설명합니다. ARC의 기본 개념과 작동 원리를 이해함으로써 안전하고 효율적인 Swift 코드를 작성하는 데 도움이 됩니다.","date":"2024-06-27T06:03:42.727Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"ARC","path":"/tags/arc","id":"arc"},{"name":"메모리 관리","path":"/tags/메모리-관리","id":"메모리-관리"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"6.9","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":2,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","create-react-app을 통한 React 설치 및 첫 페이지 만들기: 프로젝트 구조 파악과 첫 컴포넌트 작성 방법.3",{"children":["$","$La",null,{"postMeta":{"id":"42fd08ff-15be-46ab-9be6-80bcfce04b78","path":"/javascript/createreactapp을-통한-React-설치-및-첫-페이지-만들기-프로젝트-구조-파악과-첫-컴포넌트-작성-방법-42fd08ff","title":"create-react-app을 통한 React 설치 및 첫 페이지 만들기: 프로젝트 구조 파악과 첫 컴포넌트 작성 방법.","description":"이 문서에서는 create-react-app을 사용하여 React 프로젝트를 설치하고 첫 페이지를 만드는 방법에 대해 다룹니다. 또한 프로젝트의 기본 구조와 첫 컴포넌트를 작성하는 방법에 대해서도 설명합니다.","date":"2024-06-26T06:00:52.892Z","tags":[{"name":"React","path":"/tags/react","id":"react"},{"name":"Create-React-App","path":"/tags/create-react-app","id":"create-react-app"},{"name":"JavaScript","path":"/tags/javascript","id":"javascript"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"5.0","category":"javascript","banner":"/images/javascriptBanner2.jpg"},"index":3,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 제어 구조 마스터하기: if, switch, for-in, while 사용법4",{"children":["$","$La",null,{"postMeta":{"id":"093ab572-68b5-408d-a890-12f0728b85be","path":"/swift/Swift-제어-구조-마스터하기-if-switch-forin-while-사용법-093ab572","title":"Swift 제어 구조 마스터하기: if, switch, for-in, while 사용법","description":"Swift는 간결하고 직관적인 문법을 제공하여 개발자들이 효율적으로 코드를 작성할 수 있게 합니다. 이 글에서는 Swift의 제어 구조 중 'if', 'switch', 'for-in', 'while'에 대해 심도 있게 다루며, 실제 코드 예제를 통해 이해를 도울 것입니다. 이를 통해 Swift 프로그래밍의 기초적인 제어 구조를 마스터할 수 있습니다.","date":"2024-06-24T06:00:07.247Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"제어 구조","path":"/tags/제어-구조","id":"제어-구조"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"},{"name":"코드 예제","path":"/tags/코드-예제","id":"코드-예제"}],"readMin":"0.5","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":4,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","[Swift] ReactorKit을 이용한 복잡한 UI 인터랙션 처리 방법: 여러 UI 컴포넌트와의 상호작용을 ReactorKit으로 관리하기5",{"children":["$","$La",null,{"postMeta":{"id":"10da97d2-0c17-4e99-a9b6-3166dfde00cf","path":"/swift/Swift-ReactorKit을-이용한-복잡한-UI-인터랙션-처리-방법-여러-UI-컴포넌트와의-상호작용을-ReactorKit으로-관리하기-10da97d2","title":"[Swift] ReactorKit을 이용한 복잡한 UI 인터랙션 처리 방법: 여러 UI 컴포넌트와의 상호작용을 ReactorKit으로 관리하기","description":"Swift 언어의 ReactorKit을 이용하여 복잡한 UI 인터랙션을 처리하는 방법에 대해 다룹니다. 여러 UI 컴포넌트 간의 상호작용을 효과적으로 관리하는 방법을 예제로 설명합니다. 이 글은 Swift 개발자들에게 ReactorKit의 장점과 사용 방법을 상세히 안내합니다.","date":"2024-06-23T06:01:29.175Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"ReactorKit","path":"/tags/reactorkit","id":"reactorkit"},{"name":"UI","path":"/tags/ui","id":"ui"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"6.8","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":5,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 함수 기초부터 심화까지: 정의, 호출, 매개변수 및 반환 값 다루기6",{"children":["$","$La",null,{"postMeta":{"id":"f237685a-d0c0-479c-8cbf-3f596cfed523","path":"/swift/Swift-함수-기초부터-심화까지-정의-호출-매개변수-및-반환-값-다루기-f237685a","title":"Swift 함수 기초부터 심화까지: 정의, 호출, 매개변수 및 반환 값 다루기","description":"이 글에서는 Swift 함수에 대해 기초부터 심화까지 다룹니다. 함수의 정의, 호출 방법, 다양한 매개변수 다루기 그리고 반환 값의 처리 방법 등을 상세하게 설명합니다.","date":"2024-06-22T06:04:19.114Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"},{"name":"함수","path":"/tags/함수","id":"함수"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"}],"readMin":"6.1","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":6,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift에서 고급 오류 처리 기술 배우기: 커스텀 에러 타입을 활용한 복잡한 오류 처리 구조.7",{"children":["$","$La",null,{"postMeta":{"id":"66b91dd8-2435-4973-a85a-ef8c12379c66","path":"/swift/Swift에서-고급-오류-처리-기술-배우기-커스텀-에러-타입을-활용한-복잡한-오류-처리-구조-66b91dd8","title":"Swift에서 고급 오류 처리 기술 배우기: 커스텀 에러 타입을 활용한 복잡한 오류 처리 구조.","description":"이 글은 Swift에서 고급 오류 처리 기술을 배우는 데 중점을 둡니다. 특히 커스텀 에러 타입을 활용하여 복잡한 오류 처리 구조를 구현하는 방법에 대해 상세히 설명합니다.","date":"2024-06-21T06:01:33.304Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"오류 처리","path":"/tags/오류-처리","id":"오류-처리"},{"name":"커스텀 에러 타입","path":"/tags/커스텀-에러-타입","id":"커스텀-에러-타입"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"3.7","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":7,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 기본 데이터 타입 심층 분석: Int, String, Double 등 탐구8",{"children":["$","$La",null,{"postMeta":{"id":"8183628c-8a65-4b6c-9f9b-3d4f50e786ac","path":"/swift/Swift-기본-데이터-타입-심층-분석-Int-String-Double-등-탐구-8183628c","title":"Swift 기본 데이터 타입 심층 분석: Int, String, Double 등 탐구","description":"이 글은 Swift 프로그래밍 언어에서 기본 데이터 타입(Int, String, Double 등)에 대해 심층적으로 분석하고, 각각의 사용법과 특징을 탐구합니다. Swift를 처음 접하는 개발자나 데이터 타입에 대해 깊이 이해하고 싶은 분들을 위한 자료입니다.","date":"2024-06-19T06:01:58.135Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"},{"name":"데이터 타입","path":"/tags/데이터-타입","id":"데이터-타입"},{"name":"개발","path":"/tags/개발","id":"개발"}],"readMin":"4.1","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":8,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명9",{"children":["$","$La",null,{"postMeta":{"id":"fb2bdfde-fd37-4cb2-9c34-fd102002725e","path":"/swift/Swift-프로토콜과-델리게이트-활용하기-객체간-통신을-위한-패턴-설명-fb2bdfde","title":"Swift 프로토콜과 델리게이트 활용하기: 객체간 통신을 위한 패턴 설명","description":"Swift 프로토콜과 델리게이트 패턴을 통해 객체 간 통신을 효율적으로 수행하는 방법을 설명합니다. 프로토콜의 기본 개념부터 델리게이트 패턴의 실제 사용 예시까지 다룹니다.","date":"2024-06-19T06:00:45.937Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"},{"name":"프로토콜","path":"/tags/프로토콜","id":"프로토콜"},{"name":"델리게이트","path":"/tags/델리게이트","id":"델리게이트"}],"readMin":"3.0","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":9,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift 클로저 입문: 문법 이해 및 실용적 예제10",{"children":["$","$La",null,{"postMeta":{"id":"7e9bf495-818f-4c2b-bea7-ca14b31e7390","path":"/swift/Swift-클로저-입문-문법-이해-및-실용적-예제-7e9bf495","title":"Swift 클로저 입문: 문법 이해 및 실용적 예제","description":"Swift 클로저는 코드 내에서 일급 함수로서 활용되며, 이를 활용하면 더욱 효율적이고 간결한 코드를 작성할 수 있습니다. 본 글에서는 Swift 클로저의 기본 문법과 실용적 예제를 통해 클로저의 강력한 기능을 이해해보겠습니다.","date":"2024-06-18T06:00:44.950Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"클로저","path":"/tags/클로저","id":"클로저"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"}],"readMin":"1.1","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":10,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","최장 증가 부분 수열(LIS) 구하기: 다이나믹 프로그래밍 활용법11",{"children":["$","$La",null,{"postMeta":{"id":"fe62735b-7e92-4cbe-814f-fbe4dac26fb9","path":"/algorithm/최장-증가-부분-수열LIS-구하기-다이나믹-프로그래밍-활용법-fe62735b","title":"최장 증가 부분 수열(LIS) 구하기: 다이나믹 프로그래밍 활용법","description":"최장 증가 부분 수열(Longest Increasing Subsequence, LIS)을 다루는 다이나믹 프로그래밍 접근법에 대해 설명합니다. LIS 문제는 주어진 수열에서 부분 수열 중 증가하는 원소들로 이루어진 가장 긴 수열을 찾는 문제입니다. 이 글에서는 다이나믹 프로그래밍을 사용해 LIS를 효율적으로 구하는 방법을 자세히 설명합니다.","date":"2024-06-16T13:12:58.072Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"LIS","path":"/tags/lis","id":"lis"},{"name":"다이나믹 프로그래밍","path":"/tags/다이나믹-프로그래밍","id":"다이나믹-프로그래밍"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"10.6","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":11,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","분할 정복의 마법: 복잡한 문제를 작은 조각으로 풀어내는 기술12",{"children":["$","$La",null,{"postMeta":{"id":"44039c79-3a32-46ce-acc0-1c55f41bf504","path":"/algorithm/분할-정복의-마법-복잡한-문제를-작은-조각으로-풀어내는-기술-44039c79","title":"분할 정복의 마법: 복잡한 문제를 작은 조각으로 풀어내는 기술","description":"분할 정복(디바이드 앤 컨커)은 복잡한 문제를 작은 부분으로 쪼개어 해결하는 프로그래밍 기법입니다. 이 글에서는 분할 정복의 기본 원리와 응용 방법을 실제 알고리즘 예시를 들어 자세히 설명합니다.","date":"2024-06-15T13:15:51.998Z","tags":[{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"분할 정복","path":"/tags/분할-정복","id":"분할-정복"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"6.2","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":12,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift의 강력한 도구, Mirror로 데이터 구조 깊이 파헤치기13",{"children":["$","$La",null,{"postMeta":{"id":"c45657fa-5553-47f3-932a-c3de56286aa5","path":"/swift/Swift의-강력한-도구-Mirror로-데이터-구조-깊이-파헤치기-c45657fa","title":"Swift의 강력한 도구, Mirror로 데이터 구조 깊이 파헤치기","description":"Swift의 강력한 도구인 Mirror를 사용하여 데이터 구조를 심층적으로 탐색하는 방법에 대해 다룹니다. 이 글에서는 Mirror의 기본 개념과 실용적인 사용 예제를 통해 Swift 개발자가 복잡한 데이터 구조를 효율적으로 분석하는 데 필요한 지식을 제공합니다.","date":"2024-06-15T13:15:23.203Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"Mirror","path":"/tags/mirror","id":"mirror"},{"name":"데이터 구조","path":"/tags/데이터-구조","id":"데이터-구조"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"5.0","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":13,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용14",{"children":["$","$La",null,{"postMeta":{"id":"f06aadbf-f215-41fe-983e-250d86d36f42","path":"/algorithm/메모이제이션의-모든-것-고급-프로그래밍-기술의-기초부터-응용-f06aadbf","title":"메모이제이션의 모든 것: 고급 프로그래밍 기술의 기초부터 응용","description":"메모이제이션에 대한 이해를 돕기 위한 이 글은 메모이제이션의 기본 개념부터 고급 프로그래밍 기법으로의 응용까지 다루고 있습니다. 다양한 예제와 함께 실제 문제 해결에 어떻게 적용되는지 탐구합니다.","date":"2024-06-14T12:56:47.941Z","tags":[{"name":"메모이제이션","path":"/tags/메모이제이션","id":"메모이제이션"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"},{"name":"알고리즘","path":"/tags/알고리즘","id":"알고리즘"},{"name":"최적화","path":"/tags/최적화","id":"최적화"}],"readMin":"4.6","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":14,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것15",{"children":["$","$La",null,{"postMeta":{"id":"c91b57b1-75df-4cca-a7cd-c6124a42b1ba","path":"/swift/왜-Swift의-Hashable이-중요한가-알아야-할-모든-것-c91b57b1","title":"왜 Swift의 Hashable이 중요한가? 알아야 할 모든 것","description":"Swift 프로그래밍 언어에서 중요한 프로토콜 중 하나는 Hashable입니다. Hashable 프로토콜의 개념과 의미, 그리고 이것이 왜 중요한지에 대해 깊이 탐구합니다.","date":"2024-06-11T15:18:57.926Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"Hashable","path":"/tags/hashable","id":"hashable"},{"name":"프로토콜","path":"/tags/프로토콜","id":"프로토콜"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"5.9","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":15,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","크루스칼 알고리즘의 모든 것: 이론부터 구현까지 완벽 해부16",{"children":["$","$La",null,{"postMeta":{"id":"61c62462-6ce7-4b05-bc38-9b02fc82f8d2","path":"/algorithm/크루스칼-알고리즘의-모든-것-이론부터-구현까지-완벽-해부-61c62462","title":"크루스칼 알고리즘의 모든 것: 이론부터 구현까지 완벽 해부","description":"크루스칼 알고리즘은 그래프의 최소 스패닝 트리를 찾는 알고리즘으로, 간단하면서도 강력한 성능을 자랑합니다. 이번 글에서는 크루스칼 알고리즘의 이론적인 배경부터 실제 구현 방법에 이르기까지 자세히 설명합니다.","date":"2024-06-10T14:35:23.478Z","tags":[{"name":"Kruskal","path":"/tags/kruskal","id":"kruskal"},{"name":"algorithm","path":"/tags/algorithm","id":"algorithm"},{"name":"그래프 이론","path":"/tags/그래프-이론","id":"그래프-이론"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"4.4","category":"algorithm","banner":"/images/defaultBanner1.jpg"},"index":16,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift DispatchQueue로 성능 최적화하기: 반드시 피해야 할 실수들17",{"children":["$","$La",null,{"postMeta":{"id":"b7e5aa04-0698-4f2b-a322-dd75826d85c9","path":"/swift/Swift-DispatchQueue로-성능-최적화하기-반드시-피해야-할-실수들-b7e5aa04","title":"Swift DispatchQueue로 성능 최적화하기: 반드시 피해야 할 실수들","description":"Swift의 DispatchQueue를 사용한 성능 최적화 과정에서 발생할 수 있는 몇 가지 실수들을 살펴보고, 이를 어떻게 피할 수 있는지 설명합니다. 이를 통해 보다 효율적이고 안전한 코드를 작성할 수 있도록 돕습니다.","date":"2024-06-09T13:57:03.924Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"DispatchQueue","path":"/tags/dispatchqueue","id":"dispatchqueue"},{"name":"성능 최적화","path":"/tags/성능-최적화","id":"성능-최적화"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"5.3","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":17,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축18",{"children":["$","$La",null,{"postMeta":{"id":"35de9766-b7e0-4686-8989-22f74e00dcbf","path":"/swift/dynamicCallable을-사용한-DSL-Domain-Specific-Language-구축-35de9766","title":"@dynamicCallable을 사용한 DSL (Domain Specific Language) 구축","description":"Swift의 @dynamicCallable 속성을 사용하여 도메인 특화 언어(DSL)를 구축하는 방법을 설명합니다. 이 글에서는 @dynamicCallable의 기본 개념, 사용법, 그리고 실제로 DSL을 구현하는 과정을 단계별로 설명합니다.","date":"2024-06-08T15:22:37.531Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"DSL","path":"/tags/dsl","id":"dsl"},{"name":"DynamicCallable","path":"/tags/dynamiccallable","id":"dynamiccallable"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"2.8","category":"swift","banner":"/images/swiftBanner1.jpg"},"index":18,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","OptionSet으로 여러 설정을 간편하게 관리하기: 실제 사례와 코드19",{"children":["$","$La",null,{"postMeta":{"id":"198e62a1-06c5-42e8-8533-75adad763bb2","path":"/swift/OptionSet으로-여러-설정을-간편하게-관리하기-실제-사례와-코드-198e62a1","title":"OptionSet으로 여러 설정을 간편하게 관리하기: 실제 사례와 코드","description":"이 문서는 Swift 언어에서 OptionSet을 활용하여 여러 설정을 간편하게 관리하는 방법을 실제 사례와 함께 설명합니다. OptionSet의 장점과 구현 방법, 코드 예제를 통해 이해를 돕고자 합니다.","date":"2024-06-02T00:00:00.000Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"OptionSet","path":"/tags/optionset","id":"optionset"},{"name":"iOS","path":"/tags/ios","id":"ios"},{"name":"프로그래밍","path":"/tags/프로그래밍","id":"프로그래밍"}],"readMin":"4.8","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":19,"articleType":"최신글","screenType":"TAGS","language":"app"}]}]]}]]}]}]}]]}],null],"segment":"__PAGE__?{\"slug\":\"프로그래밍\"}"},"styles":[]}],"segment":["slug","%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D","d"]},"styles":[]}],"segment":"tags"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"프로그래밍 관련글 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","3",{"name":"keywords","content":"마고자비 블로그 블로그,Swift,Javascript,최적화,앱개발,1인 개발,개발자,개발,Developer"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com//tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"프로그래밍 관련글 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"프로그래밍 관련글 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com//tags/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/magomercy.png"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"프로그래밍 관련글 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/magomercy.png"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
8:null
