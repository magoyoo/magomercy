1:HL["/_next/static/media/c9a5bc6a7c948fb0-s.p.woff2",{"as":"font","type":"font/woff2"}]
2:HL["/_next/static/css/98e4530578c425d7.css",{"as":"style"}]
0:["_QDeOv29XYyrnP19mEax6",[[["",{"children":["tags",{"children":[["slug","swiftui","d"],{"children":["__PAGE__?{\"slug\":\"swiftui\"}",{}]}]}]},"$undefined","$undefined",true],"$L3",[[["$","link","0",{"rel":"stylesheet","href":"/_next/static/css/98e4530578c425d7.css","precedence":"next"}]],"$L4"]]]]
5:I{"id":42879,"chunks":["185:static/chunks/app/layout-b198f10c98e34978.js"],"name":"GoogleAnalytics","async":false}
6:I{"id":47767,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
7:I{"id":57920,"chunks":["272:static/chunks/webpack-2f2428fbb7549638.js","971:static/chunks/fd9d1056-695585668d16e3fb.js","596:static/chunks/596-e6a99af3279f5db8.js"],"name":"default","async":false}
9:I{"id":1247,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
a:I{"id":41465,"chunks":["986:static/chunks/986-5f83c849e7b0dffa.js","396:static/chunks/396-5bd701a67a6189e9.js","355:static/chunks/app/tags/[slug]/page-4363d8d5fe95e0a7.js"],"name":"","async":false}
3:[null,["$","html",null,{"lang":"ko","children":[["$","$L5",null,{}],["$","body",null,{"className":"__className_aaf875","children":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$","$L6",null,{"parallelRouterKey":"children","segmentPath":["children","tags","children",["slug","swiftui","d"],"children"],"loading":"$undefined","loadingStyles":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","template":["$","$L7",null,{}],"templateStyles":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","childProp":{"current":["$L8",["$","div",null,{"className":"pt-[80px]","children":[["$","$L9",null,{"language":"app","screenType":"TAGS"}],["$","main",null,{"className":"flex w-full justify-center","children":["$","div",null,{"className":"flex flex-row justify-start xl:w-[800px] w-full px-[20px] py-[40px] md:px-[40px] md:pb-[80px] md:pt-[60px] gap-[80px]","children":["$","section",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","h2",null,{"className":"md:flex hidden text-gray-900 font-semibold text-[22px]","children":"SwiftUI 관련글"}],["$","ul",null,{"className":"flex flex-1 flex-col gap-[80px]","children":[["$","li","SwiftUI 커스텀 뷰 수정자 만들기: SwiftUI 뷰 레이어 확장을 위한 재사용 가능한 수정자 구축.0",{"children":["$","$La",null,{"postMeta":{"id":"913e5393-1506-40b2-bf49-68c73a2ba836","path":"/swift/SwiftUI-커스텀-뷰-수정자-만들기-SwiftUI-뷰-레이어-확장을-위한-재사용-가능한-수정자-구축-913e5393","title":"SwiftUI 커스텀 뷰 수정자 만들기: SwiftUI 뷰 레이어 확장을 위한 재사용 가능한 수정자 구축.","description":"SwiftUI에서 커스텀 뷰 수정자를 작성하는 방법을 알아보고, 이를 통해 재사용 가능한 뷰 레이어 확장 방법을 소개합니다. 이 글은 SwiftUI 경험을 더욱 풍부하게 만들어줄 것입니다.","date":"2024-06-30T06:02:24.626Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"커스텀 뷰","path":"/tags/커스텀-뷰","id":"커스텀-뷰"},{"name":"수정자","path":"/tags/수정자","id":"수정자"},{"name":"재사용성","path":"/tags/재사용성","id":"재사용성"}],"readMin":"4.1","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":0,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","기존 UIKit 앱에 SwiftUI 통합하기: 기존 코드베이스에 SwiftUI gradual adoption.1",{"children":["$","$La",null,{"postMeta":{"id":"d1df6ef9-5efa-4056-af78-ce1f39eeaa90","path":"/swift/기존-UIKit-앱에-SwiftUI-통합하기-기존-코드베이스에-SwiftUI-gradual-adoption-d1df6ef9","title":"기존 UIKit 앱에 SwiftUI 통합하기: 기존 코드베이스에 SwiftUI gradual adoption.","description":"SwiftUI는 Apple이 제시한 새로운 사용자 인터페이스 프레임워크로, 기존 UIKit 앱에 점진적으로 통합할 수 있습니다. 이 글은 SwiftUI와 UIKit을 함께 사용하여 기존 코드베이스에 SwiftUI을 천천히 도입하는 방법을 설명합니다.","date":"2024-06-28T06:02:43.175Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"},{"name":"코드 통합","path":"/tags/코드-통합","id":"코드-통합"}],"readMin":"6.0","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":1,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI와 UIKit 비교 분석: 각 프레임워크의 장단점2",{"children":["$","$La",null,{"postMeta":{"id":"c8a438d1-f8ee-4924-9351-97aef56afc6b","path":"/swift/SwiftUI와-UIKit-비교-분석-각-프레임워크의-장단점-c8a438d1","title":"SwiftUI와 UIKit 비교 분석: 각 프레임워크의 장단점","description":"SwiftUI와 UIKit은 iOS 개발에서 자주 사용되는 두 가지 주요 프레임워크입니다. 이 글에서는 이 두 프레임워크의 기본 개념과 함께 각각의 장단점을 비교 분석하여 어떤 상황에서 어떤 프레임워크를 선택하는 것이 적합한지 알아보겠습니다.","date":"2024-06-28T06:02:02.036Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"iOS 개발","path":"/tags/ios-개발","id":"ios-개발"},{"name":"프레임워크 비교","path":"/tags/프레임워크-비교","id":"프레임워크-비교"}],"readMin":"6.1","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":2,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI의 고급 상태 관리: 상태, 바인딩, 환경 객체를 사용한 앱 데이터 관리 방법 탐구.3",{"children":["$","$La",null,{"postMeta":{"id":"8de3fd1f-9a2a-4d4e-b48e-ae779b7c1ad5","path":"/swift/SwiftUI의-고급-상태-관리-상태-바인딩-환경-객체를-사용한-앱-데이터-관리-방법-탐구-8de3fd1f","title":"SwiftUI의 고급 상태 관리: 상태, 바인딩, 환경 객체를 사용한 앱 데이터 관리 방법 탐구.","description":"SwiftUI의 상태 관리에는 여러 가지 방법이 있습니다. 이 글에서는 상태, 바인딩, 환경 객체를 사용하여 앱 데이터를 효율적으로 관리하는 고급 개념들을 탐구합니다.","date":"2024-06-26T06:04:06.202Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"상태 관리","path":"/tags/상태-관리","id":"상태-관리"},{"name":"바인딩","path":"/tags/바인딩","id":"바인딩"},{"name":"환경 객체","path":"/tags/환경-객체","id":"환경-객체"}],"readMin":"4.6","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":3,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계.4",{"children":["$","$La",null,{"postMeta":{"id":"05d25416-f4ad-4e04-b834-df02d4658788","path":"/swift/SwiftUI를-사용한-복잡한-UI-구성-기법-고급-레이아웃과-사용자-인터페이스-설계-05d25416","title":"SwiftUI를 사용한 복잡한 UI 구성 기법: 고급 레이아웃과 사용자 인터페이스 설계.","description":"SwiftUI를 사용한 복잡한 UI 구성 기법에 대해 알아보겠습니다. 고급 레이아웃과 사용자 인터페이스 설계에 초점을 맞춘 본 가이드에서는 다양한 기법과 도구를 통해 복잡한 UI 요소들을 효과적으로 구현하는 방법을 설명합니다.","date":"2024-06-22T06:01:52.146Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"사용자 인터페이스","path":"/tags/사용자-인터페이스","id":"사용자-인터페이스"},{"name":"레이아웃","path":"/tags/레이아웃","id":"레이아웃"},{"name":"설계","path":"/tags/설계","id":"설계"}],"readMin":"5.3","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":4,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI의 사용자 정의 뷰 수정자 만들기: 재사용 가능한 컴포넌트로 코드의 효율성 증가.5",{"children":["$","$La",null,{"postMeta":{"id":"41dd3ffd-6c2d-407a-b2b2-3c1a573f5f8d","path":"/swift/SwiftUI의-사용자-정의-뷰-수정자-만들기-재사용-가능한-컴포넌트로-코드의-효율성-증가-41dd3ffd","title":"SwiftUI의 사용자 정의 뷰 수정자 만들기: 재사용 가능한 컴포넌트로 코드의 효율성 증가.","description":"SwiftUI에서 사용자 정의 뷰 수정자를 만들어 재사용 가능한 컴포넌트를 만드는 방법을 설명합니다. 이를 통해 코드의 효율성을 증가시키고, 일관된 사용자 인터페이스를 제공합니다.","date":"2024-06-20T06:00:48.935Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"Custom View Modifier","path":"/tags/custom-view-modifier","id":"custom-view-modifier"},{"name":"Reusability","path":"/tags/reusability","id":"reusability"},{"name":"Efficiency","path":"/tags/efficiency","id":"efficiency"}],"readMin":"5.2","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":5,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","기존 UIKit 애플리케이션에 SwiftUI 통합하기: 기존 프로젝트에 SwiftUI 점진적 채택 최선의 방법.6",{"children":["$","$La",null,{"postMeta":{"id":"444393d3-f9eb-4738-b84a-978144d5cbbc","path":"/swift/기존-UIKit-애플리케이션에-SwiftUI-통합하기-기존-프로젝트에-SwiftUI-점진적-채택-최선의-방법-444393d3","title":"기존 UIKit 애플리케이션에 SwiftUI 통합하기: 기존 프로젝트에 SwiftUI 점진적 채택 최선의 방법.","description":"Swift는 애플리케이션 개발에서 강력하고 직관적인 도구로 자리잡아 왔습니다. 이 글에서는 기존 UIKit 애플리케이션에 SwiftUI를 통합하는 방법과 점진적으로 SwiftUI를 채택하는 최선의 방법을 소개합니다.","date":"2024-06-18T06:05:11.084Z","tags":[{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"iOS개발","path":"/tags/ios개발","id":"ios개발"}],"readMin":"6.2","category":"swift","banner":"/images/swiftBanner2.jpg"},"index":6,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI에서 외부 라이브러리로 BottomSheet 구현하기7",{"children":["$","$La",null,{"postMeta":{"id":"8fdcbc9e-6d5d-493e-94c7-d575bdbf3a5d","path":"/swift/SwiftUI에서-외부-라이브러리로-BottomSheet-구현하기-8fdcbc9e","title":"SwiftUI에서 외부 라이브러리로 BottomSheet 구현하기","description":"이 글에서는 SwiftUI에서 외부 라이브러리를 사용하여 BottomSheet를 구현하는 방법을 다룹니다. 단계별 설명과 예제 코드를 통해, SwiftUI 어플리케이션에 매력적인 BottomSheet를 추가할 수 있는 실질적인 방법을 배워보세요.","date":"2024-06-15T13:18:09.716Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"BottomSheet","path":"/tags/bottomsheet","id":"bottomsheet"},{"name":"외부 라이브러리","path":"/tags/외부-라이브러리","id":"외부-라이브러리"},{"name":"Swift","path":"/tags/swift","id":"swift"}],"readMin":"3.8","category":"swift","banner":"/images/swiftBanner3.jpg"},"index":7,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI로 간단하게 BottomSheet 직접 구현하기8",{"children":["$","$La",null,{"postMeta":{"id":"e1ea9851-3ff5-458b-8054-a69b8e21152b","path":"/swift/SwiftUI로-간단하게-BottomSheet-직접-구현하기-e1ea9851","title":"SwiftUI로 간단하게 BottomSheet 직접 구현하기","description":"이 글은 SwiftUI로 간단한 BottomSheet를 직접 구현하는 방법에 대해 설명합니다. SwiftUI의 기본 구성 요소와 상태 관리를 통해 직관적이고 깔끔한 UI를 만드는 과정을 배웁니다. 이 튜토리얼을 통해 기본적인 모달 뷰를 이해하고 활용할 수 있습니다.","date":"2024-06-14T11:46:32.791Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"Swift","path":"/tags/swift","id":"swift"},{"name":"BottomSheet","path":"/tags/bottomsheet","id":"bottomsheet"},{"name":"튜토리얼","path":"/tags/튜토리얼","id":"튜토리얼"}],"readMin":"4.8","category":"swift","banner":"/images/swiftBanner4.jpg"},"index":8,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법9",{"children":["$","$La",null,{"postMeta":{"id":"14be053d-a509-4a39-aa6b-d012439bcd94","path":"/swift/SwiftUI와-UIKit-통합-UITextField와-UITextView의-Binding-사용법-14be053d","title":"SwiftUI와 UIKit 통합: UITextField와 UITextView의 Binding 사용법","description":"SwiftUI와 UIKit을 통합하여 UITextField와 UITextView에 Binding을 적용하는 방법을 자세히 다룹니다. 이를 통해 개발자는 SwiftUI의 기능을 유지하면서도 UIKit의 강력한 컴포넌트를 활용할 수 있습니다.","date":"2024-06-11T06:05:43.640Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"UIKit","path":"/tags/uikit","id":"uikit"},{"name":"Binding","path":"/tags/binding","id":"binding"},{"name":"UITextField","path":"/tags/uitextfield","id":"uitextfield"},{"name":"UITextView","path":"/tags/uitextview","id":"uitextview"}],"readMin":"5.4","category":"swift","banner":"/images/swiftBanner5.jpg"},"index":9,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI에서 Combine을 이용한 조건 검사: allSatisfy와 tryAllSatisfy 적용하기10",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI에서-Combine을-이용한-조건-검사-allSatisfy와-tryAllSatisfy-적용하기","title":"SwiftUI에서 Combine을 이용한 조건 검사: allSatisfy와 tryAllSatisfy 적용하기","description":"SwiftUI와 Combine을 사용하여 조건 검사를 구현하는 방법을 알아봅니다. allSatisfy와 tryAllSatisfy 연산자를 사용해 배열의 모든 요소가 특정 조건을 만족하는지 확인하고, 사용자 입력을 검증하는 실전 예제를 통해 오류 처리까지 다룹니다.","date":"2024-06-07T11:13:07.322Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"Combine","path":"/tags/combine","id":"combine"},{"name":"allSatisfy","path":"/tags/allsatisfy","id":"allsatisfy"},{"name":"Swift","path":"/tags/swift","id":"swift"}],"readMin":"8.9","category":"swift","banner":"/images/swiftBasic.jpg"},"index":10,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI에서 Combine을 활용한 데이터 필터링: contains와 tryContains 사용법11",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI에서-Combine을-활용한-데이터-필터링-contains와-tryContains-사용법","title":"SwiftUI에서 Combine을 활용한 데이터 필터링: contains와 tryContains 사용법","description":"SwiftUI와 Combine을 사용하여 데이터 필터링을 구현하는 방법을 알아봅니다. 이 글에서는 contains와 tryContains 연산자를 사용해 배열의 특정 값을 확인하고, 오류를 처리하는 방법을 설명합니다. 실전 예제를 통해 사용자 목록에서 특정 이름을 검색하는 기능을 구현해 보세요.","date":"2024-06-07T11:13:07.322Z","tags":[{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"Combine","path":"/tags/combine","id":"combine"},{"name":"Swift","path":"/tags/swift","id":"swift"}],"readMin":"6.5","category":"swift","banner":"/images/swiftBasic.jpg"},"index":11,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift AttributedString 한 문장 내에서 특정 문자만 스타일 적용하기!12",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/Swift-AttributedString-한-문장-내에서-특정-문자만-스타일-적용하기","title":"Swift AttributedString 한 문장 내에서 특정 문자만 스타일 적용하기!","description":"Swift의 AttributedString을 사용하여 한 문장 내에서 특정 문자나 단어에 스타일을 적용하는 방법에 대해 알아보세요. 텍스트의 일부분에만 스타일을 적용하여 더욱 매력적이고 가독성 높은 사용자 인터페이스를 만드는 비결을 소개합니다.","date":"2024-06-03T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"5.8","category":"swift","banner":"/images/swiftBasic.jpg"},"index":12,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까?13",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI에서-CollectionView-사용법-언제-왜-사용할까","title":"SwiftUI에서 CollectionView 사용법: 언제, 왜 사용할까?","description":"SwiftUI에서 CollectionView를 사용하는 방법과 그 필요성을 이해하여 더욱 유연하고 강력한 사용자 인터페이스를 개발하세요. 이 가이드는 SwiftUI와 UICollectionView의 결합을 통해 다양한 데이터를 시각적으로 표현하는 방법을 소개합니다.","date":"2024-06-03T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"5.3","category":"swift","banner":"/images/swiftBasic.jpg"},"index":13,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","Swift Concurrency 동시성을 쉽게 설명해볼게요!14",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/Swift-concurrency-동시성을-쉽게-설명해볼게요","title":"Swift Concurrency 동시성을 쉽게 설명해볼게요!","description":"동시성(Concurrency) 기능은 Swift 언어에 큰 변화를 가져왔습니다. 동시성은 여러 작업을 동시에 실행하여 성능을 향상시키고, 사용자 경험을 개선할 수 있는 중요한 개념입니다.","date":"2024-06-01T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"5.0","category":"swift","banner":"/images/swiftBasic.jpg"},"index":14,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI Button Style을 활용한 다양한 효과 만들기15",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI-Button-Style을-활용한-다양한-효과-만들기","title":"SwiftUI Button Style을 활용한 다양한 효과 만들기","description":"SwiftUI에서는 Button Style을 활용하여 다양한 버튼 효과를 쉽게 구현할 수 있습니다. 이 글에서는 SwiftUI Button Style을 활용한 다양한 버튼 효과를 만드는 방법에 대해 자세히 알아보겠습니다.","date":"2024-06-01T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"7.3","category":"swift","banner":"/images/swiftBasic.jpg"},"index":15,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI Preview Binding 방법: #preview와 PreviewProvider 비교16",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI-Preview-Binding-방법-preview와-PreviewProvider-비교","title":"SwiftUI Preview Binding 방법: #preview와 PreviewProvider 비교","description":"특히, Binding을 사용하여 미리보기에서 상태를 관리하는 것은 SwiftUI의 중요한 기능 중 하나입니다. 이 글에서는 SwiftUI에서 Binding을 활용한 미리보기 방법을 #preview와 PreviewProvider를 통해 비교해보고, 각각의 장점과 단점을 살펴보겠습니다.","date":"2024-06-01T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"6.7","category":"swift","banner":"/images/swiftBasic.jpg"},"index":16,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI에서 static var previews와 #preview의 차이17",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI에서-static-var-previews와-preview의-차이","title":"SwiftUI에서 static var previews와 #preview의 차이","description":"미리보기를 설정하는 방법으로는 static var previews와 #preview가 있습니다. 이 두 방법의 차이점과 각각의 장점을 이해하는 것은 SwiftUI에서 효율적으로 UI를 개발하는 데 큰 도움이 됩니다. 이 글에서는 static var previews와 #preview의 차이를 자세히 살펴보고, 각각의 사용 사례를 통해 어떤 상황에서 어떤 방법이 더 유리한지 알아보겠습니다.","date":"2024-06-01T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"SwiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"6.0","category":"swift","banner":"/images/swiftBasic.jpg"},"index":17,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법18",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI에서-애니메이션-구현하기-transition","title":"SwiftUI Transition 애니메이션: .transition() Modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법","description":"이 글은 SwiftUI에서 .transition() modifier를 사용하여 뷰의 삽입 및 제거 시 애니메이션을 적용하는 방법을 설명합니다. 기본 전환 효과인 슬라이드, 투명도, 확대/축소 애니메이션부터 커스텀 전환 애니메이션 및 복합 전환 애니메이션까지 다양한 예제를 통해 전환 애니메이션을 효과적으로 사용하는 방법을 다룹니다. SwiftUI의 강력한 전환 애니메이션 기능을 활용하여 매끄럽고 시각적으로 매력적인 사용자 인터페이스를 구현하는 방법을 배워보세요.","date":"2024-05-27T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"animation","path":"/tags/animation","id":"animation"}],"readMin":"7.9","category":"swift","banner":"/images/swiftBasic.jpg"},"index":18,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI 상태 변화 애니메이션: 상태 변화에 따른 애니메이션을 적용, 동적인 UI를 구현19",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI에서-애니메이션-구현하기-상태변화","title":"SwiftUI 상태 변화 애니메이션: 상태 변화에 따른 애니메이션을 적용, 동적인 UI를 구현","description":"이 글은 SwiftUI에서 상태 변화 애니메이션을 적용하는 방법과 이를 통해 동적인 UI를 구현하는 방법에 대해 설명합니다. 상태 변화에 따른 애니메이션의 기본 개념부터 색상, 위치, 투명도 변화 애니메이션, 그리고 복합 애니메이션 예제까지 다양한 사례를 통해 애니메이션을 효과적으로 사용하는 방법을 다룹니다. SwiftUI의 애니메이션 기능을 활용하여 자연스럽고 매력적인 사용자 인터페이스를 구현하는 방법을 배워보세요.","date":"2024-05-27T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"animation","path":"/tags/animation","id":"animation"}],"readMin":"7.0","category":"swift","banner":"/images/swiftBasic.jpg"},"index":19,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI 반복 및 그룹 애니메이션: 애니메이션을 반복, 무한 루프, 애니메이션을 그룹 실행20",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI에서-애니메이션-반복-구현","title":"SwiftUI 반복 및 그룹 애니메이션: 애니메이션을 반복, 무한 루프, 애니메이션을 그룹 실행","description":"이 글은 SwiftUI에서 애니메이션을 반복하거나 무한 루프로 실행하는 방법과 여러 애니메이션을 그룹으로 묶어 동시에 실행하는 방법에 대해 설명합니다. .repeatCount()와 .repeatForever() modifier를 사용한 반복 애니메이션, 그리고 Animation 구조체를 활용한 그룹 애니메이션의 다양한 예제를 통해 동적이고 매력적인 사용자 인터페이스를 구현하는 방법을 다룹니다. SwiftUI의 강력한 애니메이션 기능을 활용하여 창의적이고 흥미로운 애플리케이션을 만드는 방법을 배워보세요.","date":"2024-05-27T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"animation","path":"/tags/animation","id":"animation"}],"readMin":"5.8","category":"swift","banner":"/images/swiftBasic.jpg"},"index":20,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI 제스처와 애니메이션: 제스처와 연동하여 애니메이션을 트리거하는 방법.21",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI에서-애니메이션-제스처와-애니메이션","title":"SwiftUI 제스처와 애니메이션: 제스처와 연동하여 애니메이션을 트리거하는 방법.","description":"이 글은 SwiftUI에서 제스처(예: 드래그, 탭)와 애니메이션을 연동하여 상호작용적이고 동적인 UI를 구현하는 방법을 설명합니다. 탭, 드래그, 스와이프 제스처를 인식하고 이를 기반으로 다양한 애니메이션을 트리거하는 방법을 다양한 예제를 통해 다룹니다. 제스처와 애니메이션을 결합하여 사용자 경험을 향상시키고, 창의적이고 매력적인 애플리케이션을 만드는 방법을 배워보세요.","date":"2024-05-27T11:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"animation","path":"/tags/animation","id":"animation"}],"readMin":"8.7","category":"swift","banner":"/images/swiftBasic.jpg"},"index":21,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","기본 및 커스텀 애니메이션: SwiftUI에서 애니메이션 구현하기22",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI에서-애니메이션-구현하기-정리","title":"기본 및 커스텀 애니메이션: SwiftUI에서 애니메이션 구현하기","description":"이 글은 SwiftUI에서 기본 및 커스텀 애니메이션을 구현하는 방법을 자세히 설명합니다. 기본 애니메이션부터 스프링 애니메이션, EaseInOut 애니메이션, 중첩 및 조합 애니메이션, 지연된 애니메이션까지 다양한 예제를 통해 애니메이션의 원리와 적용 방법을 이해할 수 있습니다. SwiftUI의 애니메이션 기능을 활용하여 더욱 동적이고 매력적인 사용자 인터페이스를 만드는 방법을 알아보세요.","date":"2024-05-27T10:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"},{"name":"animation","path":"/tags/animation","id":"animation"}],"readMin":"6.4","category":"swift","banner":"/images/swiftBasic.jpg"},"index":22,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI List와 ScrollView + LazyVStack 심화 비교 및 고급 사용법23",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/swiftui-list-lazyVStack-scrollView-2탄","title":"SwiftUI List와 ScrollView + LazyVStack 심화 비교 및 고급 사용법","description":"SwiftUI List와 ScrollView + LazyVStack의 성능 비교, 고급 사용법, 그리고 실용적인 예제를 통해 각 방법의 장단점을 심도 있게 분석합니다. 성능 최적화, 비동기 데이터 로딩, 필터링된 리스트 구현 및 네비게이션 기능을 통해 어떤 상황에서 어떤 방법을 선택해야 할지 명확하게 이해할 수 있습니다.","date":"2024-05-25T13:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"8.2","category":"swift","banner":"/images/swiftBasic.jpg"},"index":23,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI List와 ScrollView + LazyVStack 비교: 언제 어떤 것을 사용할까?24",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/swiftui-list-lazyVStack-scrollView","title":"SwiftUI List와 ScrollView + LazyVStack 비교: 언제 어떤 것을 사용할까?","description":"SwiftUI에서 데이터를 표시하는 방법으로 List와 ScrollView + LazyVStack을 비교해봅니다. 각 방법의 기본 사용법, 장단점, 그리고 사용 사례를 다루며, List와 ScrollView + LazyVStack의 차이점을 명확하게 설명합니다. 이를 통해 두 컴포넌트를 적절히 활용할 수 있는 기초를 다집니다.","date":"2024-05-25T13:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"4.7","category":"swift","banner":"/images/swiftBasic.jpg"},"index":24,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI-Picker-완벽-가이드-모든-것을-알아보자25",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/SwiftUI-Picker-완벽-가이드-모든-것을-알아보자","title":"SwiftUI-Picker-완벽-가이드-모든-것을-알아보자","description":"SwiftUI Picker를 사용하여 iOS 앱에 사용자 친화적인 피커사용법을 배워보세요. 기본 사용법부터 고급 커스터마이징까지, 다양한 예제와 실전 팁을 통해 Picker의 모든 기능을 완벽하게 익힐 수 있습니다. 이 가이드를 통해 SwiftUI Picker의 잠재력을 최대한 활용하여 앱의 사용자 경험을 향상시키세요","date":"2024-05-25T10:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"5.8","category":"swift","banner":"/images/swiftBasic.jpg"},"index":25,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI Horizontal List 구현하기26",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/swiftui-horizotal-list-구현하기","title":"SwiftUI Horizontal List 구현하기","description":"SwiftUI에서 ScrollView와 LazyHStack을 사용해 수평 리스트를 구현하는 방법을 알아보세요. 이 가이드는 SwiftUI List의 제한 사항과 수평 스크롤 리스트의 기본 및 고급 기능을 포함한 다양한 예제를 제공합니다. 아이템 레이아웃 커스터마이징, 무한 스크롤, 섹션별 리스트 구현, 성능 최적화 전략 등을 통해 효율적이고 유연한 수평 스크롤 리스트를 만드는 방법을 자세히 설명합니다. SwiftUI 애플리케이션을 향상시키기 위한 다양한 팁과 트릭을 배워보세요.","date":"2024-05-25T10:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"5.4","category":"swift","banner":"/images/swiftBasic.jpg"},"index":26,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI List 완벽 마스터 2탄: 고급 기능 및 심화 사용법27",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/swiftui-list-완벽-마스터-2탄","title":"SwiftUI List 완벽 마스터 2탄: 고급 기능 및 심화 사용법","description":"SwiftUI List의 기본 사용법을 숙지했다면, 이제 고급 기능과 심화 사용법을 통해 더욱 강력하고 유연한 리스트를 만들어 보세요. 이 글에서는 리스트의 다양한 고급 기능과 그 활용 방법을 다룹니다.","date":"2024-05-25T10:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"7.9","category":"swift","banner":"/images/swiftBasic.jpg"},"index":27,"articleType":"최신글","screenType":"TAGS","language":"app"}]}],["$","li","SwiftUI List 완벽 마스터: 예제와 함께 살펴보자!28",{"children":["$","$La",null,{"postMeta":{"id":"$undefined","path":"/swift/swiftui-list-완벽-마스터","title":"SwiftUI List 완벽 마스터: 예제와 함께 살펴보자!","description":"SwiftUI List를 사용하여 iOS 앱에서 데이터 리스트를 쉽게 구현하는 방법을 알아보세요. 멀티 선택, 데이터 새로고침, 섹션 구성, 계층형 리스트 등 고급 기능과 성능 최적화 팁을 포함한 상세한 예제를 제공합니다. 이 가이드를 통해 SwiftUI List의 모든 기능을 완벽하게 마스터하세요.","date":"2024-05-25T10:13:07.322Z","tags":[{"name":"swift","path":"/tags/swift","id":"swift"},{"name":"swiftUI","path":"/tags/swiftui","id":"swiftui"}],"readMin":"6.4","category":"swift","banner":"/images/swiftBasic.jpg"},"index":28,"articleType":"최신글","screenType":"TAGS","language":"app"}]}]]}]]}]}]}]]}],null],"segment":"__PAGE__?{\"slug\":\"swiftui\"}"},"styles":[]}],"segment":["slug","swiftui","d"]},"styles":[]}],"segment":"tags"},"styles":[]}]}]]}],null]
4:[["$","meta","0",{"charSet":"utf-8"}],["$","title","1",{"children":"SwiftUI 관련글 | 마고자비 블로그"}],["$","meta","2",{"name":"description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","3",{"name":"keywords","content":"마고자비 블로그 블로그,Swift,Javascript,최적화,앱개발,1인 개발,개발자,개발,Developer"}],["$","meta","4",{"name":"viewport","content":"width=device-width, initial-scale=1, minimum-scale=1, maximum-scale=1, user-scalable=no"}],["$","link","5",{"rel":"canonical","href":"https://magomercy.com//tags/swiftui"}],["$","meta","6",{"name":"apple-mobile-web-app-capable","content":"yes"}],["$","meta","7",{"name":"apple-mobile-web-app-title","content":"SwiftUI 관련글 | 마고자비 블로그"}],["$","meta","8",{"name":"apple-mobile-web-app-status-bar-style","content":"default"}],["$","meta","9",{"property":"og:title","content":"SwiftUI 관련글 | 마고자비 블로그"}],["$","meta","10",{"property":"og:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","11",{"property":"og:url","content":"https://magomercy.com//tags/swiftui"}],["$","meta","12",{"property":"og:site_name","content":"마고자비 블로그 | 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","13",{"property":"og:locale","content":"kr"}],["$","meta","14",{"property":"og:image","content":"https://magomercy.com/magomercy.png"}],["$","meta","15",{"property":"og:type","content":"website"}],["$","meta","16",{"name":"twitter:card","content":"summary"}],["$","meta","17",{"name":"twitter:creator","content":"마고자비 블로그"}],["$","meta","18",{"name":"twitter:title","content":"SwiftUI 관련글 | 마고자비 블로그"}],["$","meta","19",{"name":"twitter:description","content":"안녕하세요. 저는 마고자비로 마구잡이로 하고 싶은 것을 합니다."}],["$","meta","20",{"name":"twitter:image","content":"https://magomercy.com/magomercy.png"}],["$","link","21",{"rel":"icon","href":"https://magomercy.com/favicon32.png"}],["$","link","22",{"rel":"apple-touch-icon","href":"https://magomercy.com/favicon32.png"}],["$","meta","23",{"name":"next-size-adjust"}]]
8:null
